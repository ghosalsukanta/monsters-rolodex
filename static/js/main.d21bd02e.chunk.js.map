{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCNTC,EAAW,SAACR,GACzB,OACA,sBAAKC,UAAU,YAAf,cACUD,EAAMS,SAASC,KACb,SAAAN,GAAO,OACP,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAW,SAAC,GACxB,IADyBC,EAC1B,EAD0BA,YAAYC,EACtC,EADsCA,aAElC,OACA,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0CHG,G,wDA7Cb,aAAc,IAAD,8BACX,gBAQFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAPpC,EAAKC,MAAM,CACTb,SAAU,GACVU,YAAY,IALH,E,gEAaZ,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAK9B,IAAD,EACwBC,KAAKN,MAA5Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAIhD,OACA,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GArCVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d21bd02e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nexport const Card = (props) =>(\r\n<div className='card-container'>\r\n    <img\r\n    alt='mosnter'\r\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n</div>\r\n)","import React from 'react';\r\nimport './card-list.css';\r\nimport {Card} from '../card/card';\r\n\r\nexport const CardList = (props) => {\r\nreturn(\r\n<div className='card-list'> {\r\n          props.monsters.map(\r\n            monster=>(\r\n            <Card key={monster.id} monster={monster}/>)\r\n            )\r\n        }\r\n</div>\r\n)\r\n}","import React from 'react';\r\n\r\nimport './search-box.css';\r\n\r\nexport const SearchBox =({placeholder,handleChange})=>\r\n{\r\n    return(\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />)\r\n}","import React, {Component} from 'react';\n\nimport {CardList} from './components/card-list/card-list';\nimport {SearchBox} from './components/search-box/search-box';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state={\n      monsters: [],\n      searchField:''\n    };\n  }\n\n  handleChange = (e) =>{\n    this.setState({searchField:e.target.value})\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters:users}))\n\n  }\n\n\n  render(){\n    const {monsters,searchField} =this.state;\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    \n    \n      return (\n      <div className=\"App\">\n        <h1> Mosters Rolodex </h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n        \n      </div>\n    );\n  }\n\n}\n  \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}